{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport PostService from '../../services/PostService';\nexport const addPost = createAsyncThunk('posts/addPost', async ({\n  title,\n  desc,\n  status,\n  author\n}, thunkAPI) => {\n  try {\n    const response = await PostService.addPost(title, desc, status, author);\n    console.log(response);\n    thunkAPI.dispatch(getPosts());\n  } catch (error) {\n    console.log('Error', error);\n  }\n});\nexport const remPost = createAsyncThunk('posts/remPost', async (_id, thunkAPI) => {\n  try {\n    const response = await PostService.remPost(_id);\n    console.log(response);\n    thunkAPI.dispatch(getPosts());\n  } catch (error) {\n    console.log('Error', error);\n  }\n});\nexport const getPosts = createAsyncThunk('posts/getPosts', async () => {\n  try {\n    const response = await PostService.getPosts();\n    console.log(response);\n    return response.data;\n  } catch (error) {\n    console.log('Error', error);\n  }\n});\nexport const updatePost = createAsyncThunk('posts/updatePost', async (_id, thunkAPI) => {\n  try {\n    const response = await PostService.updatePost(_id);\n    console.log(response);\n    thunkAPI.dispatch(getPosts());\n  } catch (error) {\n    console.log('Error', error);\n  }\n});\nconst initialState = {\n  postsList: [],\n  active: 0,\n  inactive: 0\n};\nexport const postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getPosts.fulfilled, (state, action) => {\n      if (action.payload) {\n        state.active = 0;\n        state.inactive = 0;\n        state.postsList = action.payload;\n        action.payload.map(item => {\n          if (item.status === true) {\n            state.active += 1;\n          } else {\n            state.inactive += 1;\n          }\n        });\n      } else {\n        state.postsList = [];\n      }\n    });\n  }\n});\nexport const {} = postsSlice.actions;\nexport default postsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","PostService","addPost","title","desc","status","author","thunkAPI","response","console","log","dispatch","getPosts","error","remPost","_id","data","updatePost","initialState","postsList","active","inactive","postsSlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","map","item","actions","reducer"],"sources":["C:/Users/User/Desktop/todoJwt/client/src/redux/slices/postsSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport { Post } from '../../modules/IPost';\r\nimport PostService from '../../services/PostService';\r\n\r\nexport const addPost = createAsyncThunk<void, Post>(\r\n  'posts/addPost',\r\n  async ({ title, desc, status, author }, thunkAPI) => {\r\n    try {\r\n      const response = await PostService.addPost(title, desc, status, author);\r\n      console.log(response);\r\n      thunkAPI.dispatch(getPosts());\r\n    } catch (error) {\r\n      console.log('Error', error);\r\n    }\r\n  },\r\n);\r\nexport const remPost = createAsyncThunk<void, string>('posts/remPost', async (_id, thunkAPI) => {\r\n  try {\r\n    const response = await PostService.remPost(_id);\r\n    console.log(response);\r\n    thunkAPI.dispatch(getPosts());\r\n  } catch (error) {\r\n    console.log('Error', error);\r\n  }\r\n});\r\n\r\nexport const getPosts = createAsyncThunk<Post[], void>('posts/getPosts', async () => {\r\n  try {\r\n    const response = await PostService.getPosts();\r\n    console.log(response);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log('Error', error);\r\n  }\r\n});\r\n\r\nexport const updatePost = createAsyncThunk<void, string>(\r\n  'posts/updatePost',\r\n  async (_id, thunkAPI) => {\r\n    try {\r\n      const response = await PostService.updatePost(_id);\r\n      console.log(response);\r\n      thunkAPI.dispatch(getPosts());\r\n    } catch (error) {\r\n      console.log('Error', error);\r\n    }\r\n  },\r\n);\r\n\r\nconst initialState = {\r\n  postsList: [],\r\n  active: 0,\r\n  inactive: 0,\r\n};\r\n\r\nexport const postsSlice = createSlice({\r\n  name: 'posts',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(getPosts.fulfilled, (state, action) => {\r\n      if (action.payload) {\r\n        state.active = 0;\r\n        state.inactive = 0;\r\n        state.postsList = action.payload;\r\n        action.payload.map((item) => {\r\n          if (item.status === true) {\r\n            state.active += 1;\r\n          } else {\r\n            state.inactive += 1;\r\n          }\r\n        });\r\n      } else {\r\n        state.postsList = [];\r\n      }\r\n    });\r\n  },\r\n});\r\n\r\n\r\nexport const {} = postsSlice.actions;\r\n\r\nexport default postsSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}