{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const addPost = createAsyncThunk('posts/addPost', async data => {\n  try {\n    const response = await axios.post('http://localhost:8080/api/addPost', data);\n    console.log(response);\n  } catch (error) {\n    console.log('Error', error);\n  }\n});\nexport const remPost = createAsyncThunk('posts/remPost', async data => {\n  try {\n    const response = await axios.post('http://localhost:8080/api/addPost', data);\n    console.log(response);\n  } catch (error) {\n    console.log('Error', error);\n  }\n});\nexport const getPosts = createAsyncThunk('posts/getPosts', async () => {\n  try {\n    const response = await axios.get('http://localhost:8080/api/getPosts');\n    console.log(response);\n    return response.data;\n  } catch (error) {\n    console.log('Error', error);\n  }\n});\nconst initialState = {\n  postsList: [],\n  activeList: [],\n  inactiveList: []\n};\nexport const postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {\n    deletePost: (state, action) => {\n      state.postsList = state.postsList.filter(item => {\n        return item.id != action.payload.id;\n      });\n    },\n    updatePost: (state, action) => {\n      //Обновляю статус\n      console.log(action.payload.status);\n      state.postsList = state.postsList.map(item => {\n        if (item.id === action.payload.id) {\n          return {\n            ...item,\n            status: !item.status\n          };\n        }\n        return item;\n      });\n      //Перекид в новый массив по статусу\n      if (action.payload.status === true) {\n        state.activeList = state.activeList.filter(item => {\n          return item.id != action.payload.id;\n        });\n        state.inactiveList = [...state.inactiveList, {\n          ...action.payload,\n          status: false\n        }];\n      } else {\n        state.inactiveList = state.inactiveList.filter(item => {\n          return item.id != action.payload.id;\n        });\n        state.activeList = [...state.activeList, {\n          ...action.payload,\n          status: true\n        }];\n      }\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(getPosts.fulfilled, (state, action) => {\n      if (action.payload) {\n        state.postsList = action.payload;\n      } else {\n        state.postsList = [];\n      }\n    });\n  }\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  updatePost,\n  deletePost\n} = postsSlice.actions;\nexport default postsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","addPost","data","response","post","console","log","error","remPost","getPosts","get","initialState","postsList","activeList","inactiveList","postsSlice","name","reducers","deletePost","state","action","filter","item","id","payload","updatePost","status","map","extraReducers","builder","addCase","fulfilled","actions","reducer"],"sources":["C:/Users/User/Desktop/todoJwt/client/src/redux/slices/postsSlice.jsx"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nexport const addPost = createAsyncThunk('posts/addPost', async (data) => {\r\n  try {\r\n    const response = await axios.post('http://localhost:8080/api/addPost', data);\r\n    console.log(response);\r\n  } catch (error) {\r\n    console.log('Error', error);\r\n  }\r\n});\r\nexport const remPost = createAsyncThunk('posts/remPost', async (data) => {\r\n  try {\r\n    const response = await axios.post('http://localhost:8080/api/addPost', data);\r\n    console.log(response);\r\n  } catch (error) {\r\n    console.log('Error', error);\r\n  }\r\n});\r\n\r\nexport const getPosts = createAsyncThunk('posts/getPosts', async () => {\r\n  try {\r\n    const response = await axios.get('http://localhost:8080/api/getPosts');\r\n    console.log(response);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log('Error', error);\r\n  }\r\n});\r\n\r\nconst initialState = {\r\n  postsList: [],\r\n  activeList: [],\r\n  inactiveList: [],\r\n};\r\n\r\nexport const postsSlice = createSlice({\r\n  name: 'posts',\r\n  initialState,\r\n  reducers: {\r\n    deletePost: (state, action) => {\r\n      state.postsList = state.postsList.filter((item) => {\r\n        return item.id != action.payload.id;\r\n      });\r\n    },\r\n    updatePost: (state, action) => {\r\n      //Обновляю статус\r\n      console.log(action.payload.status);\r\n      state.postsList = state.postsList.map((item) => {\r\n        if (item.id === action.payload.id) {\r\n          return { ...item, status: !item.status };\r\n        }\r\n        return item;\r\n      });\r\n      //Перекид в новый массив по статусу\r\n      if (action.payload.status === true) {\r\n        state.activeList = state.activeList.filter((item) => {\r\n          return item.id != action.payload.id;\r\n        });\r\n        state.inactiveList = [...state.inactiveList, { ...action.payload, status: false }];\r\n      } else {\r\n        state.inactiveList = state.inactiveList.filter((item) => {\r\n          return item.id != action.payload.id;\r\n        });\r\n        state.activeList = [...state.activeList, { ...action.payload, status: true }];\r\n      }\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(getPosts.fulfilled, (state, action) => {\r\n      if (action.payload) {\r\n        state.postsList = action.payload;\r\n      } else {\r\n        state.postsList = [];\r\n      }\r\n    });\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { updatePost, deletePost } = postsSlice.actions;\r\n\r\nexport default postsSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}