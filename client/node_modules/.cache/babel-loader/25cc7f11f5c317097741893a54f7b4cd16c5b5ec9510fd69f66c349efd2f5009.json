{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport AuthService from '../../services/AuthService';\n// то что возвращает , то чем орудует ,спец штуки\nexport const fetchLogin = createAsyncThunk('user/login', async ({\n  email,\n  password\n}) => {\n  try {\n    const response = await AuthService.login(email, password);\n    console.log(response);\n    localStorage.setItem('token', response.data.accessToken);\n    return response.data;\n  } catch (error) {\n    console.log('Error', error);\n  }\n});\nexport const fetchRegistration = createAsyncThunk('user/registration', async ({\n  email,\n  password\n}) => {\n  try {\n    const response = await AuthService.registration(email, password);\n    console.log(response);\n    // localStorage.setItem('token', response.data.accessToken);\n  } catch (error) {\n    console.log('Error', error);\n  }\n});\nconst initialState = {\n  isAuth: false,\n  username: null\n};\nexport const postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchLogin.fulfilled, (state, ac) => {\n      state.isAuth = true;\n    });\n    builder.addCase(fetchRegistration.fulfilled, state => {\n      // state.isAuth = true;\n    });\n  }\n});\n\n// Action creators are generated for each case reducer function\nexport const {} = postsSlice.actions;\nexport default postsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","AuthService","fetchLogin","email","password","response","login","console","log","localStorage","setItem","data","accessToken","error","fetchRegistration","registration","initialState","isAuth","username","postsSlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","ac","actions","reducer"],"sources":["C:/Users/User/Desktop/todoJwt/client/src/redux/slices/usersSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport AuthService from '../../services/AuthService';\r\nimport { AuthResponse } from '../../modules/response/AuthResponse';\r\nimport { IUser } from '../../modules/response/IUser';\r\n\r\ninterface AuthData {\r\n  email: string;\r\n  password: string;\r\n}\r\n// то что возвращает , то чем орудует ,спец штуки\r\nexport const fetchLogin = createAsyncThunk<AuthResponse, AuthData>(\r\n  'user/login',\r\n  async ({ email, password }) => {\r\n    try {\r\n      const response = await AuthService.login(email, password);\r\n      console.log(response);\r\n      localStorage.setItem('token', response.data.accessToken);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.log('Error', error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const fetchRegistration = createAsyncThunk<void, AuthData>(\r\n  'user/registration',\r\n  async ({ email, password }) => {\r\n    try {\r\n      const response = await AuthService.registration(email, password);\r\n      console.log(response);\r\n      // localStorage.setItem('token', response.data.accessToken);\r\n    } catch (error) {\r\n      console.log('Error', error);\r\n    }\r\n  },\r\n);\r\n\r\nconst initialState = {\r\n  isAuth: false,\r\n  username: null,\r\n};\r\n\r\nexport const postsSlice = createSlice({\r\n  name: 'posts',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchLogin.fulfilled, (state,ac) => {\r\n      state.isAuth = true;\r\n\r\n    });\r\n    builder.addCase(fetchRegistration.fulfilled, (state) => {\r\n      // state.isAuth = true;\r\n    });\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const {} = postsSlice.actions;\r\n\r\nexport default postsSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,OAAOC,WAAW,MAAM,4BAA4B;AAQpD;AACA,OAAO,MAAMC,UAAU,GAAGF,gBAAgB,CACxC,YAAY,EACZ,OAAO;EAAEG,KAAK;EAAEC;AAAS,CAAC,KAAK;EAC7B,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,WAAW,CAACK,KAAK,CAACH,KAAK,EAAEC,QAAQ,CAAC;IACzDG,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;IACrBI,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEL,QAAQ,CAACM,IAAI,CAACC,WAAW,CAAC;IACxD,OAAOP,QAAQ,CAACM,IAAI;EACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdN,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEK,KAAK,CAAC;EAC7B;AACF,CACF,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAGd,gBAAgB,CAC/C,mBAAmB,EACnB,OAAO;EAAEG,KAAK;EAAEC;AAAS,CAAC,KAAK;EAC7B,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,WAAW,CAACc,YAAY,CAACZ,KAAK,EAAEC,QAAQ,CAAC;IAChEG,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;IACrB;EACF,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACdN,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEK,KAAK,CAAC;EAC7B;AACF,CACF,CAAC;AAED,MAAMG,YAAY,GAAG;EACnBC,MAAM,EAAE,KAAK;EACbC,QAAQ,EAAE;AACZ,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGpB,WAAW,CAAC;EACpCqB,IAAI,EAAE,OAAO;EACbJ,YAAY;EACZK,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACtB,UAAU,CAACuB,SAAS,EAAE,CAACC,KAAK,EAACC,EAAE,KAAK;MAClDD,KAAK,CAACT,MAAM,GAAG,IAAI;IAErB,CAAC,CAAC;IACFM,OAAO,CAACC,OAAO,CAACV,iBAAiB,CAACW,SAAS,EAAGC,KAAK,IAAK;MACtD;IAAA,CACD,CAAC;EACJ;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM,CAAC,CAAC,GAAGP,UAAU,CAACS,OAAO;AAEpC,eAAeT,UAAU,CAACU,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}