{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  postsList: []\n};\nexport const postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {\n    addPost: (state, action) => {\n      state.postsList = [...state.postsList, ...action.payload];\n    },\n    deletePost: (state, action) => {\n      state.postsList = state.postsList.filter(item => {\n        return item.id != action.payload.id;\n      });\n    },\n    updatePost: (state, action) => {\n      let updatedPost = state.postsList.map(item => {\n        return item.id === action.payload.id;\n      });\n      state.postsList = [...state.postsList, ...updatedPost];\n    }\n  }\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  addPost,\n  deletePost,\n  updatePost\n} = postsSlice.actions;\nexport default postsSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","postsList","postsSlice","name","reducers","addPost","state","action","payload","deletePost","filter","item","id","updatePost","updatedPost","map","actions","reducer"],"sources":["C:/Users/User/Desktop/Frontend Developer/todoJ/src/redux/slices/postsSlice.jsx"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  postsList: [],\r\n};\r\n\r\nexport const postsSlice = createSlice({\r\n  name: 'posts',\r\n  initialState,\r\n  reducers: {\r\n    addPost: (state, action) => {\r\n      state.postsList = [...state.postsList, ...action.payload];\r\n    },\r\n    deletePost: (state, action) => {\r\n      state.postsList = state.postsList.filter((item) => {\r\n        return item.id != action.payload.id;\r\n      });\r\n    },\r\n    updatePost: (state, action) => {\r\n      let updatedPost = state.postsList.map((item) => {\r\n        return item.id === action.payload.id;\r\n      });\r\n      state.postsList = [...state.postsList, ...updatedPost];\r\n    },\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { addPost, deletePost ,updatePost } = postsSlice.actions;\r\n\r\nexport default postsSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,SAAS,EAAE;AACb,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGH,WAAW,CAAC;EACpCI,IAAI,EAAE,OAAO;EACbH,YAAY;EACZI,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1BD,KAAK,CAACL,SAAS,GAAG,CAAC,GAAGK,KAAK,CAACL,SAAS,EAAE,GAAGM,MAAM,CAACC,OAAO,CAAC;IAC3D,CAAC;IACDC,UAAU,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACL,SAAS,GAAGK,KAAK,CAACL,SAAS,CAACS,MAAM,CAAEC,IAAI,IAAK;QACjD,OAAOA,IAAI,CAACC,EAAE,IAAIL,MAAM,CAACC,OAAO,CAACI,EAAE;MACrC,CAAC,CAAC;IACJ,CAAC;IACDC,UAAU,EAAEA,CAACP,KAAK,EAAEC,MAAM,KAAK;MAC7B,IAAIO,WAAW,GAAGR,KAAK,CAACL,SAAS,CAACc,GAAG,CAAEJ,IAAI,IAAK;QAC9C,OAAOA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACC,OAAO,CAACI,EAAE;MACtC,CAAC,CAAC;MACFN,KAAK,CAACL,SAAS,GAAG,CAAC,GAAGK,KAAK,CAACL,SAAS,EAAE,GAAGa,WAAW,CAAC;IACxD;EACF;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EAAET,OAAO;EAAEI,UAAU;EAAEI;AAAW,CAAC,GAAGX,UAAU,CAACc,OAAO;AAErE,eAAed,UAAU,CAACe,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}